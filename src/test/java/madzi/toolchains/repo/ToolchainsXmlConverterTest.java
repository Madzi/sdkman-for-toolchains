package madzi.toolchains.repo;

import java.nio.file.Paths;
import java.util.List;
import madzi.toolchains.domain.Toolchain;
import madzi.toolchains.service.internal.StaxToolchainsXmlConverter;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

@DisplayName("Toolchains XML Converter")
public class ToolchainsXmlConverterTest {

    @Test
    @DisplayName("can create")
    public void testCanCreateXml() {
        final var expected = """
                             <?xml version="1.0" encoding="UTF-8" standalone="no"?>
                             <toolchains xmlns="http://maven.apache.org/TOOLCHAINS/1.1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/TOOLCHAINS/1.1.0 http://maven.apache.org/xsd/toolchains-1.1.0.xsd">
                                 <!--This document was generated by 'toolchains' tool. Please don't touch it.-->
                                 <toolchain>
                                     <type>jdk</type>
                                     <provides>
                                         <version>17</version>
                                         <vendor>oracle</vendor>
                                     </provides>
                                     <configuration>
                                         <jdkHome>/home</jdkHome>
                                     </configuration>
                                 </toolchain>
                             </toolchains>
                             """;
        final var converter = new StaxToolchainsXmlConverter();
        final var xml = converter.toXml(List.of(Toolchain.builder()
                                                         .type(Toolchain.Type.JDK)
                                                         .version("17")
                                                         .vendor("oracle")
                                                         .path(Paths.get("/home"))
                                                         .build()));
        Assertions.assertEquals(expected, xml, "Generated XML doesn't match with expected");
    }
}
